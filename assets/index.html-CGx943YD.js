import{_ as e,c as i,b as a,o as n}from"./app-BxaswAnj.js";const t="/rui-plume/assets/69.HyperLogLog%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-DHDLNaFp.jpg",r="/rui-plume/assets/70.HyperLogLog%E5%91%BD%E4%BB%A4%E6%BC%94%E7%A4%BA-DM3MZxZE.jpg",l={};function d(p,s){return n(),i("div",null,[...s[0]||(s[0]=[a(`<h1 id="redis基数统计-hyperloglog" tabindex="-1"><a class="header-anchor" href="#redis基数统计-hyperloglog"><span>Redis基数统计(HyperLogLog)</span></a></h1><h3 id="看需求" tabindex="-1"><a class="header-anchor" href="#看需求"><span>看需求：</span></a></h3><p>用户搜索网站关键词的数量</p><p>统计用户每天搜索不同词条个数</p><p>统计某个网站的UV、统计某个文章的UV</p><p>什么是UV？</p><p>Unique Visitor，独立访客，一般理解为客户端IP，<strong>需要去重考虑</strong></p><h3 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么</span></a></h3><p>去重复统计功能的基数估计算法-就是HyperLogLog</p><div class="language-tex line-numbers-mode" data-highlighter="shiki" data-ext="tex" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-tex"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Redis在2.8.9版本添加了HyperLogLog 结构。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Redis HyperLogLog是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定的、并且是很小的。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">在Redis里面，每个 HyperLogLog键只需要花费12KB内存，就可以计算接近2^64个不同元素的基数。这和计算基数时，元素越多耗费</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">内存就越多的集合形成鲜明对比。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">但是，因为HyperLogLog只会根据输入元素来计算基数，而不会储存输入元素本身，所以HyperLogLog不能像集合那样，返回输入的各个元素。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>基数</strong>：是一种数据集，去重复后的真实个数</p><div class="language-tex line-numbers-mode" data-highlighter="shiki" data-ext="tex" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-tex"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(全集)={2,4,6,8,77,39,4,8,10}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">去掉重复的内容</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">基数={2,4,6,8,77,39,10} = 7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基数统计：用于统计一个集合中不重复的元素个数，就是对集合去重复后剩余元素的计算。</p><p>一句话：去重脱水后的真实数据</p><p>基本命令：</p><p><img src="`+t+'" alt=""></p><p><img src="'+r+'" alt=""></p>',17)])])}const h=e(l,[["render",d]]),g=JSON.parse('{"path":"/article/1tfo3w7x/","title":"10.Redis基数统计(HyperLogLog)","lang":"zh-CN","frontmatter":{"title":"10.Redis基数统计(HyperLogLog)","createTime":"2025/08/25 22:29:42","permalink":"/article/1tfo3w7x/","watermark":true},"readingTime":{"minutes":1.33,"words":398},"git":{"createdTime":1756136329000,"updatedTime":1756136329000,"contributors":[{"name":"HRF","username":"HRF","email":"3398775460@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/HRF?v=4","url":"https://github.com/HRF"}]},"filePathRelative":"study-notes/back-end/redis/3.redis10大数据类型/10.Redis基数统计(HyperLogLog).md","headers":[],"categoryList":[{"id":"3c4c90","sort":10002,"name":"study-notes"},{"id":"fe643d","sort":10003,"name":"back-end"},{"id":"46b09b","sort":10033,"name":"redis"},{"id":"b49e1a","sort":3,"name":"redis10大数据类型"}]}');export{h as comp,g as data};
