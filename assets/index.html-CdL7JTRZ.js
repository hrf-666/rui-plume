import{_ as e}from"./1.Redis持久化-8X3BlHnx.js";import{_ as s,c as t,b as n,o as r}from"./app-BxaswAnj.js";const p="/rui-plume/assets/25.AOF%E8%83%BD%E5%B9%B2%E5%98%9B-CfP9w100.jpg",o="/rui-plume/assets/26.AOF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B-D8NPoZUd.jpg",i="/rui-plume/assets/27.%E4%B8%89%E7%A7%8D%E5%86%99%E5%9B%9E%E7%AD%96%E7%95%A5-B-59rbLm.jpg",d="/rui-plume/assets/28.AOF%E4%B8%89%E7%A7%8D%E5%86%99%E5%9B%9E%E7%AD%96%E7%95%A5-D6l_sjn8.jpg",l={};function c(m,a){return r(),t("div",null,[...a[0]||(a[0]=[n('<h1 id="aof-append-only-file" tabindex="-1"><a class="header-anchor" href="#aof-append-only-file"><span>AOF(Append Only File)</span></a></h1><h3 id="官网介绍" tabindex="-1"><a class="header-anchor" href="#官网介绍"><span>官网介绍</span></a></h3><p><img src="'+e+'" alt=""></p><h3 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么</span></a></h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><mtext>以日志的形式来记录每个写操作</mtext></mstyle></mrow><annotation encoding="application/x-tex">\\textcolor{red}{以日志的形式来记录每个写操作}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback" style="color:red;">以日志的形式来记录每个写操作</span></span></span></span>，将Redis执行过的所有写指令记录下来(读操作不记录)，只许追加文件但是不可以改写文件，redis启动之初会读取该文件重新构建数据，换言之，redis重启的话就根据日志文件的内容将写指令从前到后执行一次以完成数据的恢复工作</p><p>默认情况下，redis是没有开启AOF的。开启AOF功能需要设置配置：appendonly yes</p><h3 id="能干嘛" tabindex="-1"><a class="header-anchor" href="#能干嘛"><span>能干嘛</span></a></h3><p><img src="'+p+'" alt=""></p><p>AOF保存的是appendonly.aof文件</p><h3 id="aof持久化工作流程" tabindex="-1"><a class="header-anchor" href="#aof持久化工作流程"><span>AOF持久化工作流程</span></a></h3><p><img src="'+o+'" alt=""></p><p>1.Client作为命令的来源，会有多个源头以及源源不断的请求命令。</p><p>2.在这些命令到达Redis Server 以后并不是直接写入AOF文件，会将其这些命令先放入AOF缓存中进行保存。这里的AOF缓冲区实际上是内存中的一片区域，存在的目的是当这些命令达到一定量以后再写入磁盘，避免频繁的磁盘IO操作。</p><p>3.AOF缓冲会根据AOF缓冲区<strong>同步文件的三种写回策略</strong>将命令写入磁盘上的AOF文件。</p><p>4.随着写入AOF内容的增加为避免文件膨胀，会根据规则进行命令的合并(<strong>又称AOF重写</strong>)，从而起到AOF文件压缩的目的。</p><p>5.当Redis Server服务器重启的时候会队AOF文件载入数据。</p><h3 id="aof缓冲区三种写回策略" tabindex="-1"><a class="header-anchor" href="#aof缓冲区三种写回策略"><span>AOF缓冲区三种写回策略</span></a></h3><p><img src="'+i+'" alt=""></p><p><strong>ALways</strong>：同步写回，每个写命令执行完立刻同步地将日志写会磁盘</p><p><strong>everysec</strong>：每秒写回，每个写命令执行完，只是先把日志写到AOF文件的内存缓冲区，每隔1秒把缓冲区中的内容写入到磁盘</p><p><strong>no</strong>：操作系统控制的写回，每个写命令执行完，只是先把日志写到AOF文件的内存缓冲区，由操作系统决定何时将缓冲区内容写回磁盘</p><p>小总结：</p><p><img src="'+d+'" alt=""></p>',23)])])}const F=s(l,[["render",c]]),O=JSON.parse('{"path":"/article/k47x71on/","title":"6.AOF(Append Only File)","lang":"zh-CN","frontmatter":{"title":"6.AOF(Append Only File)","createTime":"2025/08/25 22:29:41","permalink":"/article/k47x71on/","watermark":true},"readingTime":{"minutes":1.9,"words":569},"git":{"createdTime":1756136329000,"updatedTime":1756136329000,"contributors":[{"name":"HRF","username":"HRF","email":"3398775460@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/HRF?v=4","url":"https://github.com/HRF"}]},"filePathRelative":"study-notes/back-end/redis/4.Redis持久化/6.AOF(Append Only File).md","headers":[],"categoryList":[{"id":"3c4c90","sort":10002,"name":"study-notes"},{"id":"fe643d","sort":10003,"name":"back-end"},{"id":"46b09b","sort":10033,"name":"redis"},{"id":"3bae55","sort":4,"name":"Redis持久化"}]}');export{F as comp,O as data};
