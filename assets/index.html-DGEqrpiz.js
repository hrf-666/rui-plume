import{_ as t,c as s,b as e,o as i}from"./app-BxaswAnj.js";const n="/rui-plume/assets/60.zset-bitarrays--ga1VeZ3.jpg",r="/rui-plume/assets/61.bitmap%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4-D_uu6wTS.jpg",p="/rui-plume/assets/62.Bitmap-setbit%E7%A4%BA%E6%84%8F%E5%9B%BE-Cr79sdl7.jpg",o="/rui-plume/assets/63.Bitmap-setbit-B9yihqb5.jpg",m="/rui-plume/assets/64.Bitmap-getbit-C1ttVo3r.jpg",l="/rui-plume/assets/65.Bitmap-strlen-CsoPphqd.jpg",c="/rui-plume/assets/66.Bitmap-bitcount-CUuIFqXc.jpg",d="/rui-plume/assets/67.Bitmap-bitop1-C4yxAfIx.jpg",h={};function b(g,a){return i(),s("div",null,[...a[0]||(a[0]=[e('<h1 id="redis位图-bitmap" tabindex="-1"><a class="header-anchor" href="#redis位图-bitmap"><span>Redis位图(bitmap)</span></a></h1><p>一句话：由0和1状态表现的二进制位的bit数组</p><h3 id="看需求" tabindex="-1"><a class="header-anchor" href="#看需求"><span>看需求：</span></a></h3><ol><li>用户是否登陆过Y、N，比如软件的每日签到功能</li><li>电影、广告是否被点击播放过</li><li>钉钉打卡上下班，签到统计</li></ol><h3 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么?</span></a></h3><p><img src="'+n+'" alt=""></p><p>说明：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><mtext>用</mtext><mi>S</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>n</mi><mi>g</mi><mtext>类型作为底层数据结构实现的一种统计二值状态的数据类型</mtext></mstyle></mrow><annotation encoding="application/x-tex">\\textcolor{red}{用String类型作为底层数据结构实现的一种统计二值状态的数据类型}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback" style="color:red;">用</span><span class="mord mathnormal" style="color:red;">St</span><span class="mord mathnormal" style="margin-right:0.02778em;color:red;">r</span><span class="mord mathnormal" style="color:red;">in</span><span class="mord mathnormal" style="margin-right:0.03588em;color:red;">g</span><span class="mord cjk_fallback" style="color:red;">类型作为底层数据结构实现的一种统计二值状态的数据类型</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><mtext>位图本质是数组</mtext></mstyle></mrow><annotation encoding="application/x-tex">\\textcolor{red}{位图本质是数组}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback" style="color:red;">位图本质是数组</span></span></span></span>，它是基于String数据类型的按位的操作。该数组由多个二进制位组成，每个二进制位都对应一个偏移量（我们称之为一个索引）。</p><p>Bitmap支持的最大位数是2<sup>32位，它可以极大的节约存储空间，使用512M内存就可以存储多达42.9亿的字节信息(2</sup>32=4294967296)</p><h3 id="能干嘛" tabindex="-1"><a class="header-anchor" href="#能干嘛"><span>能干嘛？</span></a></h3><p>用于状态统计，Y、N类似AtomicBoolean</p><h3 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令"><span>基本命令</span></a></h3><p><img src="'+r+'" alt=""></p><h3 id="_1-setbit-key-offset-value" tabindex="-1"><a class="header-anchor" href="#_1-setbit-key-offset-value"><span>1.setbit key offset value</span></a></h3><p>setbit 键偏移位 只能零或者1</p><p><strong>Bitmap的偏移量从零开始计算的</strong></p><p><img src="'+p+'" alt=""></p><p><img src="'+o+'" alt=""></p><h3 id="_2-getbit-key-offset" tabindex="-1"><a class="header-anchor" href="#_2-getbit-key-offset"><span>2.getbit key offset</span></a></h3><p>获取键偏移位的值</p><p><img src="'+m+'" alt=""></p><h3 id="_3-strlen-key" tabindex="-1"><a class="header-anchor" href="#_3-strlen-key"><span>3.strlen key</span></a></h3><p>统计字节数占用多少</p><p><img src="'+l+'" alt=""></p><p>不是字符串长度而是占据几个字节，超过8位后自己按照8位一组<strong>一byte</strong>再扩容</p><h3 id="_4-bitcount-key-start-end-byte-bit" tabindex="-1"><a class="header-anchor" href="#_4-bitcount-key-start-end-byte-bit"><span>4.bitcount key [start end [byte|bit]]</span></a></h3><p>全部键里面包含有1的有多少个</p><p><img src="'+c+'" alt=""></p><h3 id="_5-bitop-operation-and-or-xor-not-destkey-key-key" tabindex="-1"><a class="header-anchor" href="#_5-bitop-operation-and-or-xor-not-destkey-key-key"><span>5.bitop operation(AND|OR|XOR|NOT) destkey key [key ...]</span></a></h3><p>案例：连续2天都签到的用户数量</p><p>假如某个网站或者系统，它的用户有1000W，我们可以使用redis的HASH结构和bitmap结构做个用户id和位置的映射</p><p><img src="'+d+'" alt=""></p>',32)])])}const y=t(h,[["render",b]]),k=JSON.parse('{"path":"/article/iknyv1pt/","title":"9.Redis位图(bitmap)","lang":"zh-CN","frontmatter":{"title":"9.Redis位图(bitmap)","createTime":"2025/08/25 22:29:42","permalink":"/article/iknyv1pt/","watermark":true},"readingTime":{"minutes":1.47,"words":440},"git":{"createdTime":1756136329000,"updatedTime":1756136329000,"contributors":[{"name":"HRF","username":"HRF","email":"3398775460@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/HRF?v=4","url":"https://github.com/HRF"}]},"filePathRelative":"study-notes/back-end/redis/3.redis10大数据类型/9.Redis位图(bitmap).md","headers":[],"categoryList":[{"id":"3c4c90","sort":10002,"name":"study-notes"},{"id":"fe643d","sort":10003,"name":"back-end"},{"id":"46b09b","sort":10033,"name":"redis"},{"id":"b49e1a","sort":3,"name":"redis10大数据类型"}]}');export{y as comp,k as data};
