import{_ as e}from"./1.Redis持久化-8X3BlHnx.js";import{_ as t,c as s,b as r,o as i}from"./app-BxaswAnj.js";const d={};function n(p,a){return i(),s("div",null,[...a[0]||(a[0]=[r('<h1 id="redis-database" tabindex="-1"><a class="header-anchor" href="#redis-database"><span>Redis DataBase</span></a></h1><h3 id="官网介绍" tabindex="-1"><a class="header-anchor" href="#官网介绍"><span>官网介绍</span></a></h3><p><img src="'+e+'" alt=""></p><p>RDB(Redis 数据库)：RDB持久化以指定的时间间隔执行数据集的时间点快照</p><h3 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么</span></a></h3><p>在指定的时间间隔，执行数据集的时间点快照</p><p>实现类似照片记录效果的方式，就是把某一时刻的数据和状态以文件的形式写到磁盘上，也就是快照。这样一来即使故障宕机，快照文件也不会丢失，数据的可靠性也就得到了保证。</p><p>这个快照文件就称为RDB文件(dump.rdb)其中，RDB就是Redis DataBase的缩写。</p><h3 id="能干嘛" tabindex="-1"><a class="header-anchor" href="#能干嘛"><span>能干嘛</span></a></h3><p>在指定的时间间隔内将内存中的数据集快照写入磁盘，也就是行话讲的snapshot内存快照，它恢复时再将硬盘快照文件直接读回到内存里。</p><p>Redis的数据都在内存中，保存备份时它执行的是全量快照，也就是说，把内存中的所有数据都记录到磁盘中，一锅端。</p><p>RDB保存的是dump.rdb文件。</p>',12)])])}const m=t(d,[["render",n]]),h=JSON.parse('{"path":"/article/f4tep552/","title":"2.RDB(Redis DataBase)","lang":"zh-CN","frontmatter":{"title":"2.RDB(Redis DataBase)","createTime":"2025/08/25 22:29:41","permalink":"/article/f4tep552/","watermark":true},"readingTime":{"minutes":0.94,"words":281},"git":{"createdTime":1756136329000,"updatedTime":1756136329000,"contributors":[{"name":"HRF","username":"HRF","email":"3398775460@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/HRF?v=4","url":"https://github.com/HRF"}]},"filePathRelative":"study-notes/back-end/redis/4.Redis持久化/2.RDB(Redis DataBase).md","headers":[],"categoryList":[{"id":"3c4c90","sort":10002,"name":"study-notes"},{"id":"fe643d","sort":10003,"name":"back-end"},{"id":"46b09b","sort":10033,"name":"redis"},{"id":"3bae55","sort":4,"name":"Redis持久化"}]}');export{m as comp,h as data};
